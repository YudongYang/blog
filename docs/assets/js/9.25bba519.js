(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{378:function(n,e,t){"use strict";t.r(e);var r=t(42),a=Object(r.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"docker-常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令"}},[this._v("#")]),this._v(" docker 常用命令")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# 列出运行中的容器\ndocker ps\n# 列出所有容器\ndocker ps -a\n# 列出镜像\ndocker images\n# 停止容器\ndocker stop [container id || container name]\n# 删除容器\ndocker rm [container id || container name]\n# 删除镜像\ndocker rmi [image id || image name]\n# 运行容器\ndocker run --name [container id || container name] -d [background run] -p 8080:8080 image name\n\n# 构建镜像\ndocker build -t [image name] [path]\n# 常用，注意那个 .\ndocker build -t [image name] . \n# 这个意思是在当前目录使用 Dockerfile 进行构建\n\n# 获取容器状态，包括 cpu 占用和 内存 占用\ndocker stats [--no-stream] [container id]\n# 获取容器信息\ndocker inspect [container id]\n# 获取容器 ip\ndocker inspect --format '{{.NetworkSettings.IPAddress}}' [container id]\n\n# 启动 docker\nsystemctl daemon-reload && systemctl start docker\n\n# 关闭docker\nservice docker stop\nsystemctl stop docker\n\n# 清理\n# https://www.cnblogs.com/mr-wuxiansheng/p/11412606.html\n# 清理镜像 \ndocker image prune\n\n# 清理容器\ndocker container prune\n\n# 删除指定匹配镜像\ndocker rmi $(docker images | grep '^<none>' | awk '{print $3}')\n\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);