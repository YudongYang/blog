(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{438:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"postcss-runner-guidelines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postcss-runner-guidelines"}},[t._v("#")]),t._v(" PostCSS Runner Guidelines")]),t._v(" "),a("p",[t._v("A PostCSS runner is a tool that processes CSS through a user-defined list\nof plugins; for example, "),a("a",{attrs:{href:"https://github.com/postcss/postcss-cli",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("postcss-cli")]),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://github.com/w0rm/gulp-postcss",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("gulp‑postcss")]),a("OutboundLink")],1),t._v(".\nThese rules are mandatory for any such runners.")]),t._v(" "),a("p",[t._v("For single-plugin tools, like "),a("a",{attrs:{href:"https://github.com/sindresorhus/gulp-autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("gulp-autoprefixer")]),a("OutboundLink")],1),t._v(",\nthese rules are not mandatory but are highly recommended.")]),t._v(" "),a("p",[t._v("See also "),a("a",{attrs:{href:"http://blog.clojurewerkz.org/blog/2013/04/20/how-to-make-your-open-source-project-really-awesome/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClojureWerkz’s recommendations"),a("OutboundLink")],1),t._v(" for open source projects.")]),t._v(" "),a("h2",{attrs:{id:"_1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-api"}},[t._v("#")]),t._v(" 1. API")]),t._v(" "),a("h3",{attrs:{id:"_1-1-accept-functions-in-plugin-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-accept-functions-in-plugin-parameters"}},[t._v("#")]),t._v(" 1.1. Accept functions in plugin parameters")]),t._v(" "),a("p",[t._v("If your runner uses a config file, it must be written in JavaScript, so that\nit can support plugins which accept a function, such as "),a("a",{attrs:{href:"https://github.com/borodean/postcss-assets",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("postcss-assets")]),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'postcss-assets'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("cachebuster")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("statSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-processing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-processing"}},[t._v("#")]),t._v(" 2. Processing")]),t._v(" "),a("h3",{attrs:{id:"_2-1-set-from-and-to-processing-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-set-from-and-to-processing-options"}},[t._v("#")]),t._v(" 2.1. Set "),a("code",[t._v("from")]),t._v(" and "),a("code",[t._v("to")]),t._v(" processing options")]),t._v(" "),a("p",[t._v("To ensure that PostCSS generates source maps and displays better syntax errors,\nrunners must specify the "),a("code",[t._v("from")]),t._v(" and "),a("code",[t._v("to")]),t._v(" options. If your runner does not handle\nwriting to disk (for example, a gulp transform), you should set both options\nto point to the same file:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-use-only-the-asynchronous-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-use-only-the-asynchronous-api"}},[t._v("#")]),t._v(" 2.2. Use only the asynchronous API")]),t._v(" "),a("p",[t._v("PostCSS runners must use only the asynchronous API.\nThe synchronous API is provided only for debugging, is slower,\nand can’t work with asynchronous plugins.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// processing is finished")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-3-use-only-the-public-postcss-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-use-only-the-public-postcss-api"}},[t._v("#")]),t._v(" 2.3. Use only the public PostCSS API")]),t._v(" "),a("p",[t._v("PostCSS runners must not rely on undocumented properties or methods,\nwhich may be subject to change in any minor release. The public API\nis described in "),a("a",{attrs:{href:"http://api.postcss.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("API docs"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"_3-output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-output"}},[t._v("#")]),t._v(" 3. Output")]),t._v(" "),a("h3",{attrs:{id:"_3-1-don-t-show-js-stack-for-csssyntaxerror"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-don-t-show-js-stack-for-csssyntaxerror"}},[t._v("#")]),t._v(" 3.1. Don’t show JS stack for "),a("code",[t._v("CssSyntaxError")])]),t._v(" "),a("p",[t._v("PostCSS runners must not show a stack trace for CSS syntax errors,\nas the runner can be used by developers who are not familiar with JavaScript.\nInstead, handle such errors gracefully:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CssSyntaxError'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showSourceCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" error\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-2-display-result-warnings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-display-result-warnings"}},[t._v("#")]),t._v(" 3.2. Display "),a("code",[t._v("result.warnings()")])]),t._v(" "),a("p",[t._v("PostCSS runners must output warnings from "),a("code",[t._v("result.warnings()")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warnings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("warn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("See also "),a("a",{attrs:{href:"https://github.com/davidtheclark/postcss-log-warnings",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-log-warnings"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/postcss/postcss-messages",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-messages"),a("OutboundLink")],1),t._v(" plugins.")]),t._v(" "),a("h3",{attrs:{id:"_3-3-allow-the-user-to-write-source-maps-to-different-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-allow-the-user-to-write-source-maps-to-different-files"}},[t._v("#")]),t._v(" 3.3. Allow the user to write source maps to different files")]),t._v(" "),a("p",[t._v("PostCSS by default will inline source maps in the generated file; however,\nPostCSS runners must provide an option to save the source map in a different\nfile:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.map'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-documentation"}},[t._v("#")]),t._v(" 4. Documentation")]),t._v(" "),a("h3",{attrs:{id:"_4-1-document-your-runner-in-english"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-document-your-runner-in-english"}},[t._v("#")]),t._v(" 4.1. Document your runner in English")]),t._v(" "),a("p",[t._v("PostCSS runners must have their "),a("code",[t._v("README.md")]),t._v(" wrote in English. Do not be afraid\nof your English skills, as the open source community will fix your errors.")]),t._v(" "),a("p",[t._v("Of course, you are welcome to write documentation in other languages;\njust name them appropriately (e.g. "),a("code",[t._v("README.ja.md")]),t._v(").")]),t._v(" "),a("h3",{attrs:{id:"_4-2-maintain-a-changelog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-maintain-a-changelog"}},[t._v("#")]),t._v(" 4.2. Maintain a changelog")]),t._v(" "),a("p",[t._v("PostCSS runners must describe changes of all releases in a separate file,\nsuch as "),a("code",[t._v("ChangeLog.md")]),t._v(", "),a("code",[t._v("History.md")]),t._v(", or with "),a("a",{attrs:{href:"https://help.github.com/articles/creating-releases/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Releases"),a("OutboundLink")],1),t._v(".\nVisit "),a("a",{attrs:{href:"http://keepachangelog.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Keep A Changelog"),a("OutboundLink")],1),t._v(" for more information on how to write one of these.")]),t._v(" "),a("p",[t._v("Of course, you should use "),a("a",{attrs:{href:"http://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SemVer"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"_4-3-postcss-runner-keyword-in-package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-postcss-runner-keyword-in-package-json"}},[t._v("#")]),t._v(" 4.3. "),a("code",[t._v("postcss-runner")]),t._v(" keyword in "),a("code",[t._v("package.json")])]),t._v(" "),a("p",[t._v("PostCSS runners written for npm must have the "),a("code",[t._v("postcss-runner")]),t._v(" keyword\nin their "),a("code",[t._v("package.json")]),t._v(". This special keyword will be useful for feedback about\nthe PostCSS ecosystem.")]),t._v(" "),a("p",[t._v("For packages not published to npm, this is not mandatory, but recommended\nif the package format is allowed to contain keywords.")])])}),[],!1,null,null,null);s.default=e.exports}}]);