(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{421:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://travis-ci.org/css-modules/icss-utils",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://travis-ci.org/css-modules/icss-utils.svg",alt:"Build Status"}}),a("OutboundLink")],1)]),s._v(" "),a("h1",{attrs:{id:"icss-utils"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#icss-utils"}},[s._v("#")]),s._v(" ICSS Utils")]),s._v(" "),a("h2",{attrs:{id:"replacesymbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replacesymbols"}},[s._v("#")]),s._v(" replaceSymbols")]),s._v(" "),a("p",[s._v("Governs the way tokens are searched & replaced during the linking stage of ICSS loading.")]),s._v(" "),a("p",[s._v("This is broken into its own module in case the behaviour needs to be replicated in other PostCSS plugins\n(i.e. "),a("a",{attrs:{href:"https://github.com/css-modules/postcss-modules-values",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSS Modules Values"),a("OutboundLink")],1),s._v(")")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" replaceSymbols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" replaceValueSymbols "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"icss-utils"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceSymbols")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" replacements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceValueSymbols")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" replacements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("Where:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("css")]),s._v(" is the PostCSS tree you're working with")]),s._v(" "),a("li",[a("code",[s._v("replacements")]),s._v(" is an JS object of "),a("code",[s._v('symbol: "replacement"')]),s._v(" pairs, where all occurrences of "),a("code",[s._v("symbol")]),s._v(" are replaced with "),a("code",[s._v("replacement")]),s._v(".")])]),s._v(" "),a("p",[s._v("A symbol is a string of alphanumeric, "),a("code",[s._v("-")]),s._v(" or "),a("code",[s._v("_")]),s._v(" characters. A replacement can be any string. They are replaced in the following places:")]),s._v(" "),a("ul",[a("li",[s._v("In the value of a declaration, i.e. "),a("code",[s._v("color: my_symbol;")]),s._v(" or "),a("code",[s._v("box-shadow: 0 0 blur spread shadow-color")])]),s._v(" "),a("li",[s._v("In a media expression i.e. "),a("code",[s._v("@media small {}")]),s._v(" or "),a("code",[s._v("@media screen and not-large {}")])])]),s._v(" "),a("h2",{attrs:{id:"extracticss-css-removerules-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extracticss-css-removerules-true"}},[s._v("#")]),s._v(" extractICSS(css, removeRules = true)")]),s._v(" "),a("p",[s._v("Extracts and remove (if removeRules is equal true) from PostCSS tree "),a("code",[s._v(":import")]),s._v(" and "),a("code",[s._v(":export")]),s._v(" statements.")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" postcss "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postcss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" extractICSS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"icss-utils"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" css "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" postcss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\n  :import(colors) {\n    a: b;\n  }\n  :export {\n    c: d;\n  }\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("extractICSS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n  {\n    icssImports: {\n      colors: {\n        a: 'b'\n      }\n    },\n    icssExports: {\n      c: 'd'\n    }\n  }\n*/")]),s._v("\n")])])]),a("h2",{attrs:{id:"createicssrules-icssimports-icssexports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createicssrules-icssimports-icssexports"}},[s._v("#")]),s._v(" createICSSRules(icssImports, icssExports)")]),s._v(" "),a("p",[s._v("Converts icss imports and exports definitions to postcss ast")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createICSSRules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    colors"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    c"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[s._v("#")]),s._v(" License")]),s._v(" "),a("p",[s._v("ISC")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("Glen Maddern, Bogdan Chadkin and Evilebottnawi 2015-present.")])])}),[],!1,null,null,null);t.default=n.exports}}]);