(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{437:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"postcss-plugin-guidelines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postcss-plugin-guidelines"}},[t._v("#")]),t._v(" PostCSS Plugin Guidelines")]),t._v(" "),a("p",[t._v("A PostCSS plugin is a function that receives and, usually,\ntransforms a CSS AST from the PostCSS parser.")]),t._v(" "),a("p",[t._v("The rules below are "),a("em",[t._v("mandatory")]),t._v(" for all PostCSS plugins.")]),t._v(" "),a("p",[t._v("See also "),a("a",{attrs:{href:"http://blog.clojurewerkz.org/blog/2013/04/20/how-to-make-your-open-source-project-really-awesome/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClojureWerkzâ€™s recommendations"),a("OutboundLink")],1),t._v(" for open source projects.")]),t._v(" "),a("h2",{attrs:{id:"_1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-api"}},[t._v("#")]),t._v(" 1. API")]),t._v(" "),a("h3",{attrs:{id:"_1-1-clear-name-with-postcss-prefix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-clear-name-with-postcss-prefix"}},[t._v("#")]),t._v(" 1.1 Clear name with "),a("code",[t._v("postcss-")]),t._v(" prefix")]),t._v(" "),a("p",[t._v("The pluginâ€™s purpose should be clear just by reading its name.\nIf you wrote a transpiler for CSS 4 Custom Media, "),a("code",[t._v("postcss-custom-media")]),t._v("\nwould be a good name. If you wrote a plugin to support mixins,\n"),a("code",[t._v("postcss-mixins")]),t._v(" would be a good name.")]),t._v(" "),a("p",[t._v("The prefix "),a("code",[t._v("postcss-")]),t._v(" shows that the plugin is part of the PostCSS ecosystem.")]),t._v(" "),a("p",[t._v("This rule is not mandatory for plugins that can run as independent tools,\nwithout the user necessarily knowing that it is powered by\nPostCSS â€” for example, "),a("a",{attrs:{href:"https://rtlcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RTLCSS"),a("OutboundLink")],1),t._v(" and "),a("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Autoprefixer"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"_1-2-do-one-thing-and-do-it-well"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-do-one-thing-and-do-it-well"}},[t._v("#")]),t._v(" 1.2. Do one thing, and do it well")]),t._v(" "),a("p",[t._v("Do not create multitool plugins. Several small, one-purpose plugins bundled into\na plugin pack is usually a better solution.")]),t._v(" "),a("p",[t._v("For example, "),a("a",{attrs:{href:"https://preset-env.cssdb.org/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("postcss-preset-env")]),a("OutboundLink")],1),t._v(" contains many small plugins,\none for each W3C specification. And "),a("a",{attrs:{href:"https://github.com/ben-eb/cssnano",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("cssnano")]),a("OutboundLink")],1),t._v(" contains a separate plugin\nfor each of its optimization.")]),t._v(" "),a("h3",{attrs:{id:"_1-3-do-not-use-mixins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-do-not-use-mixins"}},[t._v("#")]),t._v(" 1.3. Do not use mixins")]),t._v(" "),a("p",[t._v("Preprocessors libraries like Compass provide an API with mixins.")]),t._v(" "),a("p",[t._v("PostCSS plugins are different.\nA plugin cannot be just a set of mixins for "),a("a",{attrs:{href:"https://github.com/postcss/postcss-mixins",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("postcss-mixins")]),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("To achieve your goal, consider transforming valid CSS\nor using custom at-rules and custom properties.")]),t._v(" "),a("h3",{attrs:{id:"_1-4-create-plugin-by-postcss-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-create-plugin-by-postcss-plugin"}},[t._v("#")]),t._v(" 1.4. Create plugin by "),a("code",[t._v("postcss.plugin")])]),t._v(" "),a("p",[t._v("By wrapping your function in this method,\nyou are hooking into a common plugin API:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" postcss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin-name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("opts")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Plugin code")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-processing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-processing"}},[t._v("#")]),t._v(" 2. Processing")]),t._v(" "),a("h3",{attrs:{id:"_2-1-plugin-must-be-tested"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-plugin-must-be-tested"}},[t._v("#")]),t._v(" 2.1. Plugin must be tested")]),t._v(" "),a("p",[t._v("A CI service like "),a("a",{attrs:{href:"https://travis-ci.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis"),a("OutboundLink")],1),t._v(" is also recommended for testing code in\ndifferent environments. You should test in (at least) Node.js "),a("a",{attrs:{href:"https://github.com/nodejs/LTS",target:"_blank",rel:"noopener noreferrer"}},[t._v("active LTS"),a("OutboundLink")],1),t._v(" and current stable version.")]),t._v(" "),a("h3",{attrs:{id:"_2-2-use-asynchronous-methods-whenever-possible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-use-asynchronous-methods-whenever-possible"}},[t._v("#")]),t._v(" 2.2. Use asynchronous methods whenever possible")]),t._v(" "),a("p",[t._v("For example, use "),a("code",[t._v("fs.writeFile")]),t._v(" instead of "),a("code",[t._v("fs.writeFileSync")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("postcss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'plugin-sprite'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("opts")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sprite "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeSprite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sprite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-3-set-node-source-for-new-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-set-node-source-for-new-nodes"}},[t._v("#")]),t._v(" 2.3. Set "),a("code",[t._v("node.source")]),t._v(" for new nodes")]),t._v(" "),a("p",[t._v("Every node must have a relevant "),a("code",[t._v("source")]),t._v(" so PostCSS can generate\nan accurate source map.")]),t._v(" "),a("p",[t._v("So if you add a new declaration based on some existing declaration, you should\nclone the existing declaration in order to save that original "),a("code",[t._v("source")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("needPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneBefore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-webkit-'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("You can also set "),a("code",[t._v("source")]),t._v(" directly, copying from some existing node:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animation'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" keyframe "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAnimationByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  keyframes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source\n  decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keyframes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-4-use-only-the-public-postcss-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-use-only-the-public-postcss-api"}},[t._v("#")]),t._v(" 2.4. Use only the public PostCSS API")]),t._v(" "),a("p",[t._v("PostCSS plugins must not rely on undocumented properties or methods,\nwhich may be subject to change in any minor release. The public API\nis described in "),a("a",{attrs:{href:"http://api.postcss.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("API docs"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"_3-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-errors"}},[t._v("#")]),t._v(" 3. Errors")]),t._v(" "),a("h3",{attrs:{id:"_3-1-use-node-error-on-css-relevant-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-use-node-error-on-css-relevant-errors"}},[t._v("#")]),t._v(" 3.1. Use "),a("code",[t._v("node.error")]),t._v(" on CSS relevant errors")]),t._v(" "),a("p",[t._v("If you have an error because of input CSS (like an unknown name\nin a mixin plugin) you should use "),a("code",[t._v("node.error")]),t._v(" to create an error\nthat includes source position:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" mixins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Unknown mixin '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" plugin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'postcss-mixins'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-2-use-result-warn-for-warnings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-use-result-warn-for-warnings"}},[t._v("#")]),t._v(" 3.2. Use "),a("code",[t._v("result.warn")]),t._v(" for warnings")]),t._v(" "),a("p",[t._v("Do not print warnings with "),a("code",[t._v("console.log")]),t._v(" or "),a("code",[t._v("console.warn")]),t._v(",\nbecause some PostCSS runner may not allow console output.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outdated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' is outdated'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" decl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If CSS input is a source of the warning, the plugin must set the "),a("code",[t._v("node")]),t._v(" option.")]),t._v(" "),a("h2",{attrs:{id:"_4-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-documentation"}},[t._v("#")]),t._v(" 4. Documentation")]),t._v(" "),a("h3",{attrs:{id:"_4-1-document-your-plugin-in-english"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-document-your-plugin-in-english"}},[t._v("#")]),t._v(" 4.1. Document your plugin in English")]),t._v(" "),a("p",[t._v("PostCSS plugins must have their "),a("code",[t._v("README.md")]),t._v(" wrote in English. Do not be afraid\nof your English skills, as the open source community will fix your errors.")]),t._v(" "),a("p",[t._v("Of course, you are welcome to write documentation in other languages;\njust name them appropriately (e.g.Â "),a("code",[t._v("README.ja.md")]),t._v(").")]),t._v(" "),a("h3",{attrs:{id:"_4-2-include-input-and-output-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-include-input-and-output-examples"}},[t._v("#")]),t._v(" 4.2. Include input and output examples")]),t._v(" "),a("p",[t._v("The plugin's "),a("code",[t._v("README.md")]),t._v(" must contain example input and output CSS.\nA clear example is the best way to describe how your plugin works.")]),t._v(" "),a("p",[t._v("The first section of the "),a("code",[t._v("README.md")]),t._v(" is a good place to put examples.\nSee "),a("a",{attrs:{href:"https://github.com/iamvdo/postcss-opacity",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-opacity"),a("OutboundLink")],1),t._v(" for an example.")]),t._v(" "),a("p",[t._v("Of course, this guideline does not apply if your plugin does not\ntransform the CSS.")]),t._v(" "),a("h3",{attrs:{id:"_4-3-maintain-a-changelog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-maintain-a-changelog"}},[t._v("#")]),t._v(" 4.3. Maintain a changelog")]),t._v(" "),a("p",[t._v("PostCSS plugins must describe the changes of all their releases\nin a separate file, such as "),a("code",[t._v("CHANGELOG.md")]),t._v(", "),a("code",[t._v("History.md")]),t._v(", orÂ "),a("a",{attrs:{href:"https://help.github.com/articles/creating-releases/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Releases"),a("OutboundLink")],1),t._v(".\nVisit "),a("a",{attrs:{href:"http://keepachangelog.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Keep A Changelog"),a("OutboundLink")],1),t._v(" for more information about how to write one of these.")]),t._v(" "),a("p",[t._v("Of course, you should be using "),a("a",{attrs:{href:"http://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SemVer"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"_4-4-include-postcss-plugin-keyword-in-package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-include-postcss-plugin-keyword-in-package-json"}},[t._v("#")]),t._v(" 4.4. Include "),a("code",[t._v("postcss-plugin")]),t._v(" keyword in "),a("code",[t._v("package.json")])]),t._v(" "),a("p",[t._v("PostCSS plugins written for npm must have the "),a("code",[t._v("postcss-plugin")]),t._v(" keyword\nin their "),a("code",[t._v("package.json")]),t._v(". This special keyword willÂ be useful for feedback about\nthe PostCSS ecosystem.")]),t._v(" "),a("p",[t._v("For packages not published to npm, this is not mandatory, but is recommended\nif the package format can contain keywords.")])])}),[],!1,null,null,null);s.default=n.exports}}]);