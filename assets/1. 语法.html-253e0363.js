import{_ as e,M as p,p as o,q as l,R as n,t as s,N as t,a1 as c}from"./framework-30b324a0.js";const u={},i=n("h2",{id:"语法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#语法","aria-hidden":"true"},"#"),s(" 语法")],-1),r=n("p",null,"vue.js 的语法，基本上是基于 js + html + css ， vue 的语法更多提现在其指令、生命周期钩子函数和特殊的函数上。",-1),d={href:"https://github.com/YudongYang/blog/tree/master/blogs/Front/vue/%E7%BB%83%E4%B9%A0/1.%E7%A9%BA%E7%99%BD%E7%BB%83%E4%B9%A0%E9%A1%B5.html",target:"_blank",rel:"noopener noreferrer"},k=c(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello RCC&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个例子中，包含了两部分重要的元素：HTML 页面 DOM 元素 &#39;#app&#39; 和 SCRIPT Vue 对象。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个是页面 DOM 元素部分</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello RCC&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个是 Vue 对象部分</p><p>Vue 最神奇的地方就是将页面 DOM 元素和对应的数据双向绑定起来，实现了数据改变自动修改页面 DOM 元素。关于 Vue 是如何实现这个双向数据绑定的功能，可以参考 #TODO</p><p>下面我们会发现，我们平时讨论的 Vue 语法，基本上都是指类似 <code>v-model</code> 和 <code>Vue</code> 对象里面的函数和 API 内容。</p><h3 id="一、实例" tabindex="-1"><a class="header-anchor" href="#一、实例" aria-hidden="true">#</a> 一、实例</h3>`,9),v=n("p",null,"每个 Vue 应用都是通过用 Vue 函数创建一个新的 Vue 实例开始的",-1),m={href:"https://cn.vuejs.org/v2/guide/instance.html",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"二、模版语法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、模版语法","aria-hidden":"true"},"#"),s(" 二、模版语法")],-1),h=n("p",null,"Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。所有 Vue.js 的模板都是合法的 HTML ，所以能被遵循规范的浏览器和 HTML 解析器解析。",-1),b={href:"https://cn.vuejs.org/v2/guide/syntax.html",target:"_blank",rel:"noopener noreferrer"};function _(V,f){const a=p("ExternalLinkIcon");return o(),l("div",null,[i,r,n("p",null,[s("下面我们使用 "),n("a",d,[s("空白练习页"),t(a)]),s(" 中的代码来分析一下 vue 的语法")]),k,n("blockquote",null,[v,n("p",null,[s("参考文档: "),n("a",m,[s("Vue 实例"),t(a)])])]),g,n("blockquote",null,[h,n("p",null,[s("参考文档: "),n("a",b,[s("Vue 模板语法"),t(a)])])])])}const y=e(u,[["render",_],["__file","1. 语法.html.vue"]]);export{y as default};
